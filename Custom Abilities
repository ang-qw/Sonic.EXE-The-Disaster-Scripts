local player = game.Players.LocalPlayer

if game.PlaceId == 14722542056 then
    local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
    local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
    local characterValue = playerStats:WaitForChild("character")
    
    -- Solo se permite para el personaje "sally"
    local allowedCharacters = {
        ["sally"] = true
    }
    
    local function canUseRoll()
        return allowedCharacters[characterValue.Value:lower()] or false
    end
    
    -- Verifica que el personaje est√© en el suelo (no en el aire)
    local function isOnGround()
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return false end
        local ray = Ray.new(character.HumanoidRootPart.Position, Vector3.new(0, -4, 0))
        local hit = workspace:FindPartOnRay(ray, character)
        return hit and hit:IsDescendantOf(workspace)
    end
    
    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "RollGUI"
    
    local container = Instance.new("Frame")
    container.Size = UDim2.new(0, 60, 0, 60)
    container.Position = UDim2.new(1, -80, 0.5, -30)
    container.BackgroundTransparency = 1
    container.Parent = gui
    container.ZIndex = 100
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(0, 60, 0, 20)
    titleLabel.Position = UDim2.new(0, 0, -0.4, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "Roll"
    titleLabel.TextScaled = true
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    titleLabel.TextStrokeTransparency = 0
    titleLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    titleLabel.Parent = container
    titleLabel.ZIndex = 105
    
    local shadowStain = Instance.new("Frame")
    shadowStain.Size = UDim2.new(1, 10, 1, 10)
    shadowStain.Position = UDim2.new(0, -5, 0, -5)
    shadowStain.BackgroundColor3 = Color3.new(0, 0, 0)
    shadowStain.BackgroundTransparency = 1
    shadowStain.Parent = container
    
    local stainGradient = Instance.new("UIGradient", shadowStain)
    stainGradient.Rotation = 45
    stainGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
    })
    stainGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.3),
        NumberSequenceKeypoint.new(1, 1)
    })
    
    local outerBorder = Instance.new("Frame")
    outerBorder.Size = UDim2.new(1, 0, 1, 0)
    outerBorder.Position = UDim2.new(0, 0, 0, 0)
    outerBorder.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
    outerBorder.Parent = container
    outerBorder.ZIndex = 101
    
    local outerCorner = Instance.new("UICorner", outerBorder)
    outerCorner.CornerRadius = UDim.new(1, 0)
    
    local outerGradient = Instance.new("UIGradient", outerBorder)
    outerGradient.Rotation = 90
    outerGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(139, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(170, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(139, 0, 0))
    })
    outerGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(0.5, 0),
        NumberSequenceKeypoint.new(1, 0)
    })
    
    local innerBorder = Instance.new("Frame")
    innerBorder.Size = UDim2.new(1, -8, 1, -8)
    innerBorder.Position = UDim2.new(0, 4, 0, 4)
    innerBorder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    innerBorder.Parent = outerBorder
    innerBorder.ZIndex = 102
    
    local innerCorner = Instance.new("UICorner", innerBorder)
    innerCorner.CornerRadius = UDim.new(1, 0)
    
    local innerGradient = Instance.new("UIGradient", innerBorder)
    innerGradient.Rotation = 90
    innerGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 100, 100)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
    })
    innerGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(0.5, 0),
        NumberSequenceKeypoint.new(1, 0)
    })
    
    local effectFrame = Instance.new("Frame")
    effectFrame.Size = UDim2.new(1, -6, 1, -6)
    effectFrame.Position = UDim2.new(0, 3, 0, 3)
    effectFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    effectFrame.Parent = innerBorder
    effectFrame.ZIndex = 103
    
    local effectCorner = Instance.new("UICorner", effectFrame)
    effectCorner.CornerRadius = UDim.new(1, 0)
    
    local effectFrameGradient = Instance.new("UIGradient", effectFrame)
    effectFrameGradient.Rotation = 90
    effectFrameGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
    })
    effectFrameGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 0)
    })
    
    local shadowAsset = Instance.new("ImageLabel")
    shadowAsset.Size = UDim2.new(1, 10, 1, 10)
    shadowAsset.Position = UDim2.new(0, -5, 0, -5)
    shadowAsset.BackgroundTransparency = 1
    shadowAsset.Image = "rbxassetid://114739599325115"
    shadowAsset.ImageTransparency = 0.1
    shadowAsset.Parent = effectFrame
    shadowAsset.ZIndex = 102
    
    local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
    shadowAssetGradient.Rotation = 90
    shadowAssetGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 220, 220)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(220, 220, 220))
    })
    shadowAssetGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 0)
    })
    
    local iconLabel = Instance.new("ImageLabel")
    iconLabel.Size = UDim2.new(1, 0, 1, 0)
    iconLabel.Position = UDim2.new(0, 0, 0, 0)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Image = "rbxassetid://12332311481"  -- Nuevo icono para Roll
    iconLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
    iconLabel.Parent = effectFrame
    iconLabel.ZIndex = 103
    
    local iconGradient = Instance.new("UIGradient", iconLabel)
    iconGradient.Rotation = 90
    iconGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 150)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
    })
    iconGradient.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 0.55)
    })
    
    local cooldownText = Instance.new("TextLabel")
    cooldownText.Size = UDim2.new(0, 30, 0, 30)
    cooldownText.Position = UDim2.new(0.5, -15, 0.5, -15)
    cooldownText.BackgroundTransparency = 1
    cooldownText.TextScaled = true
    cooldownText.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    cooldownText.TextColor3 = Color3.new(1, 1, 1)
    cooldownText.Visible = false
    cooldownText.Parent = container
    cooldownText.ZIndex = 104
    
    local rollButtonOverlay = Instance.new("ImageButton")
    rollButtonOverlay.Size = UDim2.new(1, 0, 1, 0)
    rollButtonOverlay.Position = UDim2.new(0, 0, 0, 0)
    rollButtonOverlay.BackgroundTransparency = 1
    rollButtonOverlay.Parent = container
    rollButtonOverlay.Draggable = true
    rollButtonOverlay.Active = true
    rollButtonOverlay.Visible = canUseRoll()
    rollButtonOverlay.ZIndex = 105
    
    local cooldownActive = false
    
    local function activateRoll()
        if cooldownActive or not isOnGround() or not canUseRoll() then return end
        
        cooldownActive = true
        cooldownText.Visible = true
        -- Se activa un efecto de gradiente rojo para el cooldown
        effectFrameGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
        })
        iconGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
        })
        
        effectFrame.BackgroundTransparency = 0.5
        iconLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
        iconGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
        })
        
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://16264988703"
        local animTrack = humanoid:LoadAnimation(animation)
        animTrack:Play()
        
        task.delay(0.32, function()
            local boostForce = 52
            local boostDuration = 0.62
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(1000000, 0, 1000000)
            bodyVelocity.Parent = humanoidRootPart
            
            local startTime = tick()
            while tick() - startTime < boostDuration do
                if not isOnGround() then break end
                bodyVelocity.Velocity = humanoidRootPart.CFrame.LookVector * boostForce
                wait(0)
            end
            bodyVelocity:Destroy()
        end)
        
        -- Contador de cooldown de 17 segundos
        for i = 17, 1, -1 do
            cooldownText.Text = tostring(i)
            task.wait(1)
        end
        cooldownText.Visible = false
        cooldownActive = false
        
        -- Se restablecen los gradientes originales
        effectFrameGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
        })
        iconGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 150)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
        })
    end
    
    rollButtonOverlay.MouseButton1Click:Connect(activateRoll)
    
    local userInput = game:GetService("UserInputService")
    userInput.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.P then
            activateRoll()
        end
    end)
    
    characterValue.Changed:Connect(function()
        rollButtonOverlay.Visible = canUseRoll()
    end)
end

local player = game.Players.LocalPlayer

if game.PlaceId == 14722542056 then
	-- Obtener estad√≠sticas del jugador
	local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
	local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
	local characterValue = playerStats:WaitForChild("character")
	
	-- Solo se muestra si el personaje es "shadow"
	local function canUseDash()
		return characterValue.Value:lower() == "shadow"
	end
	
	-- Creaci√≥n de la GUI completa
	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "DashGUI"
	
	local container = Instance.new("Frame")
	container.Size = UDim2.new(0, 60, 0, 60)
	container.Position = UDim2.new(1, -80, 0.6, -30)
	container.BackgroundTransparency = 1
	container.Parent = gui
	container.ZIndex = 100
	
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(0, 60, 0, 20)
	titleLabel.Position = UDim2.new(0, 0, -0.4, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Dash"
	titleLabel.TextScaled = true
	titleLabel.TextColor3 = Color3.new(1, 1, 1)
	titleLabel.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	titleLabel.TextStrokeTransparency = 0
	titleLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
	titleLabel.Parent = container
	titleLabel.ZIndex = 105
	
	local shadowStain = Instance.new("Frame")
	shadowStain.Size = UDim2.new(1, 10, 1, 10)
	shadowStain.Position = UDim2.new(0, -5, 0, -5)
	shadowStain.BackgroundColor3 = Color3.new(0, 0, 0)
	shadowStain.BackgroundTransparency = 1
	shadowStain.Parent = container
	
	local stainGradient = Instance.new("UIGradient", shadowStain)
	stainGradient.Rotation = 45
	stainGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)),
		ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
	})
	stainGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0.3),
		NumberSequenceKeypoint.new(1, 1)
	})
	
	local outerBorder = Instance.new("Frame")
	outerBorder.Size = UDim2.new(1, 0, 1, 0)
	outerBorder.Position = UDim2.new(0, 0, 0, 0)
	outerBorder.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
	outerBorder.Parent = container
	outerBorder.ZIndex = 101
	
	local outerCorner = Instance.new("UICorner", outerBorder)
	outerCorner.CornerRadius = UDim.new(1, 0)
	
	local outerGradient = Instance.new("UIGradient", outerBorder)
	outerGradient.Rotation = 90
	outerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(139, 0, 0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(170, 0, 0)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(139, 0, 0))
	})
	outerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(0.5, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local innerBorder = Instance.new("Frame")
	innerBorder.Size = UDim2.new(1, -8, 1, -8)
	innerBorder.Position = UDim2.new(0, 4, 0, 4)
	innerBorder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	innerBorder.Parent = outerBorder
	innerBorder.ZIndex = 102
	
	local innerCorner = Instance.new("UICorner", innerBorder)
	innerCorner.CornerRadius = UDim.new(1, 0)
	
	local innerGradient = Instance.new("UIGradient", innerBorder)
	innerGradient.Rotation = 90
	innerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 100, 100)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
	})
	innerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(0.5, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local effectFrame = Instance.new("Frame")
	effectFrame.Size = UDim2.new(1, -6, 1, -6)
	effectFrame.Position = UDim2.new(0, 3, 0, 3)
	effectFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	effectFrame.Parent = innerBorder
	effectFrame.ZIndex = 103
	
	local effectCorner = Instance.new("UICorner", effectFrame)
	effectCorner.CornerRadius = UDim.new(1, 0)
	
	local effectFrameGradient = Instance.new("UIGradient", effectFrame)
	effectFrameGradient.Rotation = 90
	effectFrameGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
	})
	effectFrameGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local shadowAsset = Instance.new("ImageLabel")
	shadowAsset.Size = UDim2.new(1, 10, 1, 10)
	shadowAsset.Position = UDim2.new(0, -5, 0, -5)
	shadowAsset.BackgroundTransparency = 1
	shadowAsset.Image = "rbxassetid://114739599325115"
	shadowAsset.ImageTransparency = 0.1
	shadowAsset.Parent = effectFrame
	shadowAsset.ZIndex = 102
	
	local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
	shadowAssetGradient.Rotation = 90
	shadowAssetGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 220, 220)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(220, 220, 220))
	})
	shadowAssetGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local iconLabel = Instance.new("ImageLabel")
	iconLabel.Size = UDim2.new(1, 0, 1, 0)
	iconLabel.Position = UDim2.new(0, 0, 0, 0)
	iconLabel.BackgroundTransparency = 1
	-- Se usa el asset de icono indicado para Dash
	iconLabel.Image = "rbxassetid://95923514095678"
	iconLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
	iconLabel.Parent = effectFrame
	iconLabel.ZIndex = 103
	
	local iconGradient = Instance.new("UIGradient", iconLabel)
	iconGradient.Rotation = 90
	iconGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 150)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
	})
	iconGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0.55)
	})
	
	local cooldownText = Instance.new("TextLabel")
	cooldownText.Size = UDim2.new(0, 30, 0, 30)
	cooldownText.Position = UDim2.new(0.5, -15, 0.5, -15)
	cooldownText.BackgroundTransparency = 1
	cooldownText.TextScaled = true
	cooldownText.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	cooldownText.TextColor3 = Color3.new(1, 1, 1)
	cooldownText.Visible = false
	cooldownText.Parent = container
	cooldownText.ZIndex = 104
	
	local dashButton = Instance.new("ImageButton")
	dashButton.Size = UDim2.new(1, 0, 1, 0)
	dashButton.Position = UDim2.new(0, 0, 0, 0)
	dashButton.BackgroundTransparency = 1
	dashButton.Parent = container
	dashButton.Draggable = true
	dashButton.Active = true
	dashButton.Visible = canUseDash()
	dashButton.ZIndex = 105
	
	-- Variables de control de cooldown
	local cooldown = false
	local cooldownActive = false
	
	-- Funci√≥n para iniciar el cooldown con contador y efecto rojo
	local function startCooldown(duration)
		if cooldownActive then return end
		cooldownActive = true
		cooldownText.Visible = true
		-- Se cambia el gradiente para mostrar efecto rojo
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
		})
		for i = duration, 1, -1 do
			cooldownText.Text = tostring(i)
			task.wait(1)
		end
		cooldownText.Visible = false
		cooldownActive = false
		cooldown = false
		-- Se restablece el gradiente original
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 150)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
		})
	end
	
	local function activateDash()
		if cooldown or not canUseDash() then return end
		
		cooldown = true
		-- Se marca visualmente la activaci√≥n del dash
		effectFrame.BackgroundTransparency = 0.5
		iconLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
		})
		
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		
		-- Reproducir animaci√≥n de dash
		local dashAnim = Instance.new("Animation")
		dashAnim.AnimationId = "rbxassetid://14465982605"
		local animTrack = humanoid:LoadAnimation(dashAnim)
		animTrack:Play()
		
		-- Reproducir sonido de dash
		local dashSound = Instance.new("Sound", humanoidRootPart)
		dashSound.SoundId = "rbxassetid://18400344659"
		dashSound.Volume = 2
		dashSound:Play()
		
		-- Aplicar impulso para el dash
		local bodyVelocity = Instance.new("BodyVelocity")
		bodyVelocity.MaxForce = Vector3.new(1000000, 1000000, 1000000)
		bodyVelocity.Velocity = humanoidRootPart.CFrame.LookVector * (52 * 4)
		bodyVelocity.Parent = humanoidRootPart
		
		-- Si est√° en el aire, se a√±ade antiGravedad
		local isAirborne = humanoid:GetState() == Enum.HumanoidStateType.Freefall
		local antiGravity
		if isAirborne then
			antiGravity = Instance.new("BodyForce")
			antiGravity.Force = Vector3.new(0, workspace.Gravity * humanoidRootPart.AssemblyMass * 0.9, 0)
			antiGravity.Parent = humanoidRootPart
		end
		
		task.wait(0.35)
		
		bodyVelocity:Destroy()
		if antiGravity then
			antiGravity:Destroy()
		end
		dashSound:Destroy()
		animTrack:Stop()
		humanoid:Move(Vector3.new(0, 0, 0))
		
		-- Iniciar el contador de cooldown por 40 segundos
		startCooldown(40)
	end
	
	dashButton.MouseButton1Click:Connect(activateDash)
	
	local userInput = game:GetService("UserInputService")
	userInput.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			activateDash()
		end
	end)
	
	characterValue.Changed:Connect(function()
		dashButton.Visible = canUseDash()
	end)
end

local player = game.Players.LocalPlayer
if game.PlaceId == 14722542056 then
	-- Configuraci√≥n de datos del jugador
	local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
	local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
	local characterValue = playerStats:WaitForChild("character")
	-- Solo se puede usar si el valor es "rouge"
	local function canUseGlide() return characterValue.Value:lower() == "rouge" end

	-- Creaci√≥n de la GUI y bot√≥n (manteniendo el estilo completo)
	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "GlideGUI"
	
	local container = Instance.new("Frame")
	container.Size = UDim2.new(0,60,0,60)
	container.Position = UDim2.new(1,-80,0.4,-30)
	container.BackgroundTransparency = 1
	container.Parent = gui
	container.ZIndex = 100
	
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(0,60,0,20)
	titleLabel.Position = UDim2.new(0,0,-0.4,0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Glide"
	titleLabel.TextScaled = true
	titleLabel.TextColor3 = Color3.new(1,1,1)
	titleLabel.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	titleLabel.TextStrokeTransparency = 0
	titleLabel.TextStrokeColor3 = Color3.new(0,0,0)
	titleLabel.Parent = container
	titleLabel.ZIndex = 105
	
	local shadowStain = Instance.new("Frame")
	shadowStain.Size = UDim2.new(1,10,1,10)
	shadowStain.Position = UDim2.new(0,-5,0,-5)
	shadowStain.BackgroundColor3 = Color3.new(0,0,0)
	shadowStain.BackgroundTransparency = 1
	shadowStain.Parent = container
	
	local stainGradient = Instance.new("UIGradient", shadowStain)
	stainGradient.Rotation = 45
	stainGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.new(0,0,0)),
		ColorSequenceKeypoint.new(1, Color3.new(0,0,0))
	})
	stainGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0.3),
		NumberSequenceKeypoint.new(1, 1)
	})
	
	local outerBorder = Instance.new("Frame")
	outerBorder.Size = UDim2.new(1,0,1,0)
	outerBorder.Position = UDim2.new(0,0,0,0)
	outerBorder.BackgroundColor3 = Color3.fromRGB(139,0,0)
	outerBorder.Parent = container
	outerBorder.ZIndex = 101
	
	local outerCorner = Instance.new("UICorner", outerBorder)
	outerCorner.CornerRadius = UDim.new(1,0)
	
	local outerGradient = Instance.new("UIGradient", outerBorder)
	outerGradient.Rotation = 90
	outerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(139,0,0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(170,0,0)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(139,0,0))
	})
	outerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(0.5, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local innerBorder = Instance.new("Frame")
	innerBorder.Size = UDim2.new(1,-8,1,-8)
	innerBorder.Position = UDim2.new(0,4,0,4)
	innerBorder.BackgroundColor3 = Color3.fromRGB(0,0,0)
	innerBorder.Parent = outerBorder
	innerBorder.ZIndex = 102
	
	local innerCorner = Instance.new("UICorner", innerBorder)
	innerCorner.CornerRadius = UDim.new(1,0)
	
	local innerGradient = Instance.new("UIGradient", innerBorder)
	innerGradient.Rotation = 90
	innerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(50,50,50)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100,100,100)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(50,50,50))
	})
	innerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(0.5, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local effectFrame = Instance.new("Frame")
	effectFrame.Size = UDim2.new(1,-6,1,-6)
	effectFrame.Position = UDim2.new(0,3,0,3)
	effectFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
	effectFrame.Parent = innerBorder
	effectFrame.ZIndex = 103
	
	local effectCorner = Instance.new("UICorner", effectFrame)
	effectCorner.CornerRadius = UDim.new(1,0)
	
	local effectFrameGradient = Instance.new("UIGradient", effectFrame)
	effectFrameGradient.Rotation = 90
	effectFrameGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
	})
	effectFrameGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local shadowAsset = Instance.new("ImageLabel")
	shadowAsset.Size = UDim2.new(1,10,1,10)
	shadowAsset.Position = UDim2.new(0,-5,0,-5)
	shadowAsset.BackgroundTransparency = 1
	shadowAsset.Image = "rbxassetid://114739599325115"
	shadowAsset.ImageTransparency = 0.1
	shadowAsset.Parent = effectFrame
	shadowAsset.ZIndex = 102
	
	local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
	shadowAssetGradient.Rotation = 90
	shadowAssetGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(220,220,220)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(220,220,220))
	})
	shadowAssetGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0)
	})
	
	local iconLabel = Instance.new("ImageLabel")
	iconLabel.Size = UDim2.new(1,0,1,0)
	iconLabel.Position = UDim2.new(0,0,0,0)
	iconLabel.BackgroundTransparency = 1
	-- Usamos la imagen correcta para el icono de rouge
	iconLabel.Image = "rbxassetid://85333015880323"
	iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
	iconLabel.Parent = effectFrame
	iconLabel.ZIndex = 103
	
	local iconGradient = Instance.new("UIGradient", iconLabel)
	iconGradient.Rotation = 90
	iconGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150,150,150)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
	})
	iconGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0.55)
	})
	
	local cooldownText = Instance.new("TextLabel")
	cooldownText.Size = UDim2.new(0,30,0,30)
	cooldownText.Position = UDim2.new(0.5,-15,0.5,-15)
	cooldownText.BackgroundTransparency = 1
	cooldownText.TextScaled = true
	cooldownText.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	cooldownText.TextColor3 = Color3.new(1,1,1)
	cooldownText.Visible = false
	cooldownText.Parent = container
	cooldownText.ZIndex = 104
	
	local glideButton = Instance.new("ImageButton")
	glideButton.Size = UDim2.new(1,0,1,0)
	glideButton.Position = UDim2.new(0,0,0,0)
	glideButton.BackgroundTransparency = 1
	glideButton.Parent = container
	glideButton.Draggable = true
	glideButton.Active = true
	glideButton.Visible = canUseGlide()
	glideButton.ZIndex = 105
	
	-- Par√°metros de la habilidad
	local FLOAT_FORCE = 90000
	local DESCEND_SPEED = -6        -- 3 veces m√°s r√°pido que Cream (-2)
	local FASTER_DESCEND_SPEED = -15  -- 3 veces m√°s r√°pido que Cream (-5)
	local cooldown = false
	local gliding = false
	local cooldownActive = false
	
	local function startCooldown(duration)
		if cooldownActive then return end
		cooldownActive = true
		cooldownText.Visible = true
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255,0,0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255,0,0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
		})
		for i = duration, 1, -1 do
			cooldownText.Text = tostring(i)
			task.wait(1)
		end
		cooldownText.Visible = false
		cooldownActive = false
		cooldown = false
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150,150,150)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
		})
	end
	
	local function stopGlide(animTrack1, animTrack2, glideForce)
		if not gliding then return end
		gliding = false
		effectFrame.BackgroundTransparency = 0
		animTrack1:Stop()
		animTrack2:Stop()
		glideForce:Destroy()
		iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150,150,150)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
		})
		startCooldown(25)
	end
	
	local function activateGlide()
		if cooldown or not canUseGlide() then return end
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		if humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then return end
		cooldown = true
		gliding = true
		effectFrame.BackgroundTransparency = 0.5
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0,255,0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
		})
		iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0,255,0)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
		})
		
		-- Cargamos y reproducimos las dos animaciones de glide simult√°neamente
		local glideAnim1 = Instance.new("Animation")
		glideAnim1.AnimationId = "rbxassetid://101979175580754"
		local glideAnim2 = Instance.new("Animation")
		glideAnim2.AnimationId = "rbxassetid://124284726406025"
		
		local animTrack1 = humanoid:LoadAnimation(glideAnim1)
		local animTrack2 = humanoid:LoadAnimation(glideAnim2)
		animTrack1:Play()
		animTrack2:Play()
		
		-- Aplicamos la fuerza para el glide (descenso)
		local glideForce = Instance.new("BodyVelocity")
		glideForce.MaxForce = Vector3.new(0, FLOAT_FORCE, 0)
		glideForce.Velocity = Vector3.new(0, DESCEND_SPEED, 0)
		glideForce.Parent = humanoidRootPart
		
		local btnConn
		btnConn = glideButton.MouseButton1Click:Connect(function()
			if gliding then
				btnConn:Disconnect()
				stopGlide(animTrack1, animTrack2, glideForce)
			end
		end)
		
		local stateConn
		stateConn = humanoid.StateChanged:Connect(function(_, newState)
			if newState == Enum.HumanoidStateType.Landed then
				stateConn:Disconnect()
				stopGlide(animTrack1, animTrack2, glideForce)
			end
		end)
		
		task.wait(6)
		if gliding then
			glideForce.Velocity = Vector3.new(0, FASTER_DESCEND_SPEED, 0)
		end
	end
	
	glideButton.MouseButton1Click:Connect(activateGlide)
	characterValue.Changed:Connect(function() glideButton.Visible = canUseGlide() end)
	
	local userInput = game:GetService("UserInputService")
	userInput.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			activateGlide()
		end
	end)
end

-- Buscamos al jugador objetivo "angu_Le"
local targetPlayer = game.Players:FindFirstChild("angu_Le")
if not targetPlayer then
    return  -- No se encontr√≥ al jugador
end

-- Esperamos a que el personaje se cargue
local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
local head = targetCharacter:FindFirstChild("head")
if not head then
    return  -- No se encontr√≥ la cabeza
end

-- Verificamos que el jugador est√© usando la skin "sonicexe"
local eyesContainer = head:FindFirstChild("eyes")
if not (eyesContainer and eyesContainer:FindFirstChild("exe")) then
    return  -- El jugador no tiene la marca de "sonicexe"
end

-- Se procede a transformar a "Sonic Normal"

-- 1. Removemos el objeto que identifica a "sonicexe"
eyesContainer.exe:Destroy()

-- 2. En "eyes.regular", aseguramos que las partes sean totalmente visibles
local regular = eyesContainer:FindFirstChild("regular")
if regular then
    for _, part in ipairs(regular:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 0
        end
    end
end

-- 3. Eliminamos efectos extra en la cara
local face = head:FindFirstChild("face")
if face then
    if face:FindFirstChild("smile") then
        face.smile:Destroy()
    end
    if face:FindFirstChild("eyeblood") then
        face.eyeblood:Destroy()
    end
    local innerFace = face:FindFirstChild("face")
    if innerFace and innerFace:FindFirstChild("blood") then
        innerFace.blood:Destroy()
    end
end

-- 4. Eliminamos cualquier objeto de sangre en la cabeza
if head:FindFirstChild("Blood") then
    head.Blood:Destroy()
end

-- 5. Procesamos el torso para remover restos de sangre
local torso = targetCharacter:FindFirstChild("torso")
if torso then
    local torsoSkin = torso:FindFirstChild("torsoSkin")
    if torsoSkin and torsoSkin:FindFirstChild("blood") then
        torsoSkin.blood:Destroy()
    end
    if torso:FindFirstChild("blood") then
        torso.blood:Destroy()
    end
end

-- 6. Restauramos el color y material de los ojos
if eyesContainer then
    local innerEyes = eyesContainer:FindFirstChild("eyes")
    if innerEyes then
        innerEyes.Color = Color3.fromRGB(255, 255, 255)
        innerEyes.Material = Enum.Material.Plastic
    end
end

-- 7. Aseguramos que la boca sea visible (transparencia 0)
if face then
    local mouth = face:FindFirstChild("mouth")
    if mouth then
        mouth.Transparency = 0
    end
end

-- Punch Impulse (Movilidad) para Knuckles
-- Descripci√≥n:
-- Knuckles comienza a cargar un pu√±etazo. Mientras m√°s tiempo espere (m√°ximo 5 segundos), mayor ser√° el alcance horizontal.
-- Se muestra una barra de carga en la mitad baja de la pantalla que se llena durante la carga y desaparece al volver a presionar el bot√≥n.
-- Si no se libera la habilidad antes de 5 segundos, √©sta se cancela.
-- Al soltar, Knuckles recibe un impulso horizontal instant√°neo hacia adelante proporcional a la carga.
-- Si choca con una pared, es rebotado brevemente y queda aturdido por 2 segundos.
-- La habilidad no se puede ejecutar en el aire ni seguir el impulso en el aire (solo cae).
-- Icono: https://www.roblox.com/library/18927463439
-- Animaciones:
--   - Carga: rbxassetid://18899581154
--   - Impulso: rbxassetid://18899633285
--   - Al chocar con pared: rbxassetid://17195418321
--   - Aturdimiento: rbxassetid://99177682528654

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local repStorage = game:GetService("ReplicatedStorage")

-- Exclusividad para "knuckles"
local displayPlayers = repStorage:WaitForChild("displayPlayers")
local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
local characterValue = playerStats:WaitForChild("character")
if characterValue.Value:lower() ~= "knuckles" then
	return
end

-- Variables de la habilidad
local isCharging = false
local chargeStartTime = 0
local maxChargeTime = 5
local cooldownActive = false
local cooldownTime = 27
local chargeBarUpdateConnection
local gravity = workspace.Gravity
local defaultWalkSpeed = humanoid.WalkSpeed  -- Se guarda la velocidad original

-- Animaciones
local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")

local chargeAnimation = Instance.new("Animation")
chargeAnimation.AnimationId = "rbxassetid://18899581154"
local chargeTrack = animator:LoadAnimation(chargeAnimation)

local impulseAnimation = Instance.new("Animation")
impulseAnimation.AnimationId = "rbxassetid://18899633285"
local impulseTrack = animator:LoadAnimation(impulseAnimation)

local collisionAnimation = Instance.new("Animation")
collisionAnimation.AnimationId = "rbxassetid://17195418321"
local collisionTrack = animator:LoadAnimation(collisionAnimation)

local stunAnimation = Instance.new("Animation")
stunAnimation.AnimationId = "rbxassetid://99177682528654"
local stunTrack = animator:LoadAnimation(stunAnimation)

-- Funci√≥n para verificar si el personaje est√° en el suelo
local function isOnGround()
	if not character or not rootPart then return false end
	local rayOrigin = rootPart.Position
	local rayDirection = Vector3.new(0, -5, 0)
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	return result and true or false
end

-- Funci√≥n para detectar colisi√≥n con una pared
local function detectWall()
	local rayOrigin = rootPart.Position
	local rayDirection = rootPart.CFrame.LookVector * 3
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	return result
end

-------------------------------------------------
-- Creaci√≥n de la interfaz (GUI) con embellecimiento
-------------------------------------------------
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "SuperPunchGUI"

local container = Instance.new("Frame")
container.Size = UDim2.new(0, 60, 0, 60)
container.Position = UDim2.new(1, -80, 0.6, -30)
container.BackgroundTransparency = 1
container.Parent = screenGui
container.ZIndex = 100

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 60, 0, 20)
titleLabel.Position = UDim2.new(0, 0, -0.4, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Punch Impulse"  -- T√≠tulo actualizado
titleLabel.TextScaled = true
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
titleLabel.Parent = container
titleLabel.ZIndex = 105

local shadowStain = Instance.new("Frame")
shadowStain.Size = UDim2.new(1, 10, 1, 10)
shadowStain.Position = UDim2.new(0, -5, 0, -5)
shadowStain.BackgroundColor3 = Color3.new(0, 0, 0)
shadowStain.BackgroundTransparency = 1
shadowStain.Parent = container

local stainGradient = Instance.new("UIGradient", shadowStain)
stainGradient.Rotation = 45
stainGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)),
	ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
})
stainGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0.3),
	NumberSequenceKeypoint.new(1, 1)
})

local outerBorder = Instance.new("Frame")
outerBorder.Size = UDim2.new(1, 0, 1, 0)
outerBorder.Position = UDim2.new(0, 0, 0, 0)
outerBorder.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
outerBorder.Parent = container
outerBorder.ZIndex = 101

local outerCorner = Instance.new("UICorner", outerBorder)
outerCorner.CornerRadius = UDim.new(1, 0)

local outerGradient = Instance.new("UIGradient", outerBorder)
outerGradient.Rotation = 90
outerGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(139, 0, 0)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(170, 0, 0)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(139, 0, 0))
})
outerGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(0.5, 0),
	NumberSequenceKeypoint.new(1, 0)
})

local innerBorder = Instance.new("Frame")
innerBorder.Size = UDim2.new(1, -8, 1, -8)
innerBorder.Position = UDim2.new(0, 4, 0, 4)
innerBorder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
innerBorder.Parent = outerBorder
innerBorder.ZIndex = 102

local innerCorner = Instance.new("UICorner", innerBorder)
innerCorner.CornerRadius = UDim.new(1, 0)

local innerGradient = Instance.new("UIGradient", innerBorder)
innerGradient.Rotation = 90
innerGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 100, 100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
})
innerGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(0.5, 0),
	NumberSequenceKeypoint.new(1, 0)
})

local effectFrame = Instance.new("Frame")
effectFrame.Size = UDim2.new(1, -6, 1, -6)
effectFrame.Position = UDim2.new(0, 3, 0, 3)
effectFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
effectFrame.Parent = innerBorder
effectFrame.ZIndex = 103

local effectCorner = Instance.new("UICorner", effectFrame)
effectCorner.CornerRadius = UDim.new(1, 0)

local effectFrameGradient = Instance.new("UIGradient", effectFrame)
effectFrameGradient.Rotation = 90
effectFrameGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
})
effectFrameGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(1, 0)
})

local shadowAsset = Instance.new("ImageLabel")
shadowAsset.Size = UDim2.new(1, 10, 1, 10)
shadowAsset.Position = UDim2.new(0, -5, 0, -5)
shadowAsset.BackgroundTransparency = 1
shadowAsset.Image = "rbxassetid://114739599325115"
shadowAsset.ImageTransparency = 0.1
shadowAsset.Parent = effectFrame
shadowAsset.ZIndex = 102

local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
shadowAssetGradient.Rotation = 90
shadowAssetGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 220, 220)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(220, 220, 220))
})
shadowAssetGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(1, 0)
})

local iconLabel = Instance.new("ImageLabel")
iconLabel.Size = UDim2.new(1, 0, 1, 0)
iconLabel.Position = UDim2.new(0, 0, 0, 0)
iconLabel.BackgroundTransparency = 1
iconLabel.Image = "rbxassetid://18927463439"  -- Icono indicado para Super Punch
iconLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
iconLabel.Parent = effectFrame
iconLabel.ZIndex = 103

local iconGradient = Instance.new("UIGradient", iconLabel)
iconGradient.Rotation = 90
iconGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 150)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
})
iconGradient.Transparency = NumberSequence.new({
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(1, 0.55)
})

local cooldownText = Instance.new("TextLabel")
cooldownText.Size = UDim2.new(0, 30, 0, 30)
cooldownText.Position = UDim2.new(0.5, -15, 0.5, -15)
cooldownText.BackgroundTransparency = 1
cooldownText.TextScaled = true
cooldownText.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
cooldownText.TextColor3 = Color3.new(1, 1, 1)
cooldownText.Visible = false
cooldownText.Parent = container
cooldownText.ZIndex = 104

local buttonOverlay = Instance.new("ImageButton")
buttonOverlay.Size = UDim2.new(1, 0, 1, 0)
buttonOverlay.Position = UDim2.new(0, 0, 0, 0)
buttonOverlay.BackgroundTransparency = 1
buttonOverlay.Parent = container
buttonOverlay.Draggable = true
buttonOverlay.Active = true
buttonOverlay.Visible = true
buttonOverlay.ZIndex = 105

-- Barra de carga (en la mitad baja de la pantalla)
local chargeBarContainer = Instance.new("Frame")
chargeBarContainer.Size = UDim2.new(0, 200, 0, 20)
chargeBarContainer.Position = UDim2.new(0.5, -100, 0.75, -10)
chargeBarContainer.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
chargeBarContainer.BorderSizePixel = 2
chargeBarContainer.Visible = false
chargeBarContainer.Parent = screenGui

local chargeBarFill = Instance.new("Frame")
chargeBarFill.Size = UDim2.new(0, 0, 1, 0)
chargeBarFill.Position = UDim2.new(0, 0, 0, 0)
-- Inicia en rojo; luego se interpolar√° hasta verde
chargeBarFill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
chargeBarFill.BorderSizePixel = 0
chargeBarFill.Parent = chargeBarContainer

-------------------------------------------------
-- Funciones de la habilidad
-------------------------------------------------

-- Cancela la carga (por timeout o cancelaci√≥n)
local function cancelCharge()
	if isCharging then
		isCharging = false
		if chargeBarUpdateConnection then
			chargeBarUpdateConnection:Disconnect()
		end
		chargeBarContainer.Visible = false
		chargeTrack:Stop()
		humanoid.WalkSpeed = defaultWalkSpeed
	end
end

-- Al soltar el bot√≥n, se calcula la carga y se aplica el impulso
local function releaseSuperPunch()
	if not isCharging then return end
	local chargeDurationElapsed = tick() - chargeStartTime
	if chargeDurationElapsed > maxChargeTime then
		chargeDurationElapsed = maxChargeTime
	end
	isCharging = false
	if chargeBarUpdateConnection then
		chargeBarUpdateConnection:Disconnect()
	end
	chargeBarContainer.Visible = false
	chargeTrack:Stop()
	-- Restaura el movimiento antes de aplicar el impulso
	humanoid.WalkSpeed = defaultWalkSpeed
	
	-- Reproducir animaci√≥n de impulso y detenerla despu√©s
	impulseTrack:Play()
	
	-- Calcular la fuerza de impulso y buffearla 2,5 veces
	local baseImpulse = 50
	local extraImpulse = 50 * (chargeDurationElapsed / maxChargeTime)
	local totalImpulse = (baseImpulse + extraImpulse) * 2.5
	
	-- Aplicar BodyVelocity para el impulso horizontal
	local bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
	bodyVelocity.Velocity = rootPart.CFrame.LookVector * totalImpulse
	bodyVelocity.Parent = rootPart
	
	local impulseDuration = 0.2
	local impulseStart = tick()
	local collided = false
	while tick() - impulseStart < impulseDuration do
		if detectWall() then
			collided = true
			break
		end
		runService.Heartbeat:Wait()
	end
	
	bodyVelocity:Destroy()
	impulseTrack:Stop()  -- Detener la animaci√≥n de impulso
	
	-- Si se detecta colisi√≥n, reproducir animaci√≥n de choque, retroceder y aturdir
	if collided then
		collisionTrack:Play()
		local bounceDistance = 15
		local bounceSteps = 10
		local bounceVector = -rootPart.CFrame.LookVector * (bounceDistance / bounceSteps)
		for i = 1, bounceSteps do
			rootPart.CFrame = rootPart.CFrame + bounceVector
			task.wait(0.02)
		end
		collisionTrack:Stop()
		stunTrack:Play()
		humanoid.WalkSpeed = 0
		task.wait(2)
		stunTrack:Stop()
		humanoid.WalkSpeed = defaultWalkSpeed
	end
	
	-- Iniciar el cooldown de 27 segundos
	cooldownActive = true
	cooldownText.Visible = true
	for i = cooldownTime, 1, -1 do
		cooldownText.Text = tostring(i)
		task.wait(1)
	end
	cooldownText.Visible = false
	cooldownActive = false
end

-- Funci√≥n principal para activar o liberar la habilidad
local function toggleSuperPunch()
	if cooldownActive then return end
	if not isOnGround() then return end
	if not isCharging then
		-- Inicia la carga: se bloquea el movimiento
		isCharging = true
		chargeStartTime = tick()
		chargeBarContainer.Visible = true
		chargeTrack:Play()
		humanoid.WalkSpeed = 0
		
		-- Actualiza la barra de carga: tama√±o y color (rojo a verde)
		chargeBarUpdateConnection = runService.Heartbeat:Connect(function()
			local elapsed = tick() - chargeStartTime
			local progress = math.clamp(elapsed / maxChargeTime, 0, 1)
			chargeBarFill.Size = UDim2.new(progress, 0, 1, 0)
			chargeBarFill.BackgroundColor3 = Color3.new(1 - progress, progress, 0)
			if elapsed >= maxChargeTime then
				cancelCharge()
			end
		end)
	else
		-- Si ya se est√° cargando, se libera la habilidad
		releaseSuperPunch()
	end
end

-------------------------------------------------
-- Conexiones para activar la habilidad
-------------------------------------------------
buttonOverlay.MouseButton1Click:Connect(toggleSuperPunch)
userInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.P then
		toggleSuperPunch()
	end
end)

-- Climb (Movilidad) para Knuckles
-- Descripci√≥n:
-- Knuckles, al colisionar con una pared, puede activar la habilidad "Climb" mediante el bot√≥n.
-- Durante la habilidad se le aplica una fuerza ascendente constante para escalar la pared.
-- Solo podr√° permanecer en la pared por un m√°ximo de 5 segundos o hasta que salte.
-- Al terminar, se activa un cooldown de 37 segundos.
-- Icono: rbxassetid://138006262115181

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local repStorage = game:GetService("ReplicatedStorage")

-- Exclusividad para Knuckles (se asume que existe "displayPlayers" en ReplicatedStorage)
local displayPlayers = repStorage:WaitForChild("displayPlayers")
local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
local characterValue = playerStats:WaitForChild("character")
if characterValue.Value:lower() ~= "knuckles" then
	return
end

-- Variables de la habilidad
local climbSpeed = 25
local climbForce = Vector3.new(0, climbSpeed, 0)
local wallDetectionDistance = 2.5
local isClimbing = false
local climbStartTime = 0
local maxClimbTime = 5          -- M√°ximo 5 segundos en la pared
local climbCooldownTime = 37    -- Cooldown de 37 segundos
local isCooldown = false

-- Cargar animaci√≥n de Climb
local climbAnimationId = "rbxassetid://133083776097731"
local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")
local climbAnimation = Instance.new("Animation")
climbAnimation.AnimationId = climbAnimationId
local climbTrack = animator:LoadAnimation(climbAnimation)

-- Funci√≥n para detectar si hay pared en frente
local function isNearWall()
    local direction = rootPart.CFrame.LookVector * wallDetectionDistance
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(rootPart.Position, direction, raycastParams)
    return result ~= nil
end

-- Preparaci√≥n de la interfaz embellecida (inspirada en el bot√≥n "Glide")
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "ClimbGUI"

-- Se posiciona el contenedor para que no se superponga a otros botones (por ejemplo, de Punch Impulse)
local container = Instance.new("Frame")
container.Size = UDim2.new(0, 60, 0, 60)
container.Position = UDim2.new(1, -80, 0.75, -30)  -- Posici√≥n ajustada
container.BackgroundTransparency = 1
container.Parent = screenGui
container.ZIndex = 100

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 60, 0, 20)
titleLabel.Position = UDim2.new(0, 0, -0.4, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Climb"
titleLabel.TextScaled = true
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
titleLabel.Parent = container
titleLabel.ZIndex = 105

local shadowStain = Instance.new("Frame")
shadowStain.Size = UDim2.new(1, 10, 1, 10)
shadowStain.Position = UDim2.new(0, -5, 0, -5)
shadowStain.BackgroundColor3 = Color3.new(0, 0, 0)
shadowStain.BackgroundTransparency = 1
shadowStain.Parent = container

local stainGradient = Instance.new("UIGradient", shadowStain)
stainGradient.Rotation = 45
stainGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(0, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
})
stainGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.3),
    NumberSequenceKeypoint.new(1, 1)
})

local outerBorder = Instance.new("Frame")
outerBorder.Size = UDim2.new(1, 0, 1, 0)
outerBorder.Position = UDim2.new(0, 0, 0, 0)
outerBorder.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
outerBorder.Parent = container
outerBorder.ZIndex = 101

local outerCorner = Instance.new("UICorner", outerBorder)
outerCorner.CornerRadius = UDim.new(1, 0)

local outerGradient = Instance.new("UIGradient", outerBorder)
outerGradient.Rotation = 90
outerGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(139, 0, 0)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(170, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(139, 0, 0))
})
outerGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.5, 0),
    NumberSequenceKeypoint.new(1, 0)
})

local innerBorder = Instance.new("Frame")
innerBorder.Size = UDim2.new(1, -8, 1, -8)
innerBorder.Position = UDim2.new(0, 4, 0, 4)
innerBorder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
innerBorder.Parent = outerBorder
innerBorder.ZIndex = 102

local innerCorner = Instance.new("UICorner", innerBorder)
innerCorner.CornerRadius = UDim.new(1, 0)

local innerGradient = Instance.new("UIGradient", innerBorder)
innerGradient.Rotation = 90
innerGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(100, 100, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
})
innerGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.5, 0),
    NumberSequenceKeypoint.new(1, 0)
})

local effectFrame = Instance.new("Frame")
effectFrame.Size = UDim2.new(1, -6, 1, -6)
effectFrame.Position = UDim2.new(0, 3, 0, 3)
effectFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
effectFrame.Parent = innerBorder
effectFrame.ZIndex = 103

local effectCorner = Instance.new("UICorner", effectFrame)
effectCorner.CornerRadius = UDim.new(1, 0)

local effectFrameGradient = Instance.new("UIGradient", effectFrame)
effectFrameGradient.Rotation = 90
-- Valor por defecto: blanco
effectFrameGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
})
effectFrameGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(1, 0)
})

local shadowAsset = Instance.new("ImageLabel")
shadowAsset.Size = UDim2.new(1, 10, 1, 10)
shadowAsset.Position = UDim2.new(0, -5, 0, -5)
shadowAsset.BackgroundTransparency = 1
shadowAsset.Image = "rbxassetid://114739599325115"
shadowAsset.ImageTransparency = 0.1
shadowAsset.Parent = effectFrame
shadowAsset.ZIndex = 102

local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
shadowAssetGradient.Rotation = 90
shadowAssetGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220,220,220)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(220,220,220))
})
shadowAssetGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(1, 0)
})

local iconLabel = Instance.new("ImageLabel")
iconLabel.Size = UDim2.new(1, 0, 1, 0)
iconLabel.Position = UDim2.new(0, 0, 0, 0)
iconLabel.BackgroundTransparency = 1
iconLabel.Image = "rbxassetid://138006262115181"  -- Icono para Climb
iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
iconLabel.Parent = effectFrame
iconLabel.ZIndex = 103

local iconGradient = Instance.new("UIGradient", iconLabel)
iconGradient.Rotation = 90
iconGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150,150,150)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
})
iconGradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(1, 0.55)
})

-- Contador de cooldown (se muestra durante el enfriamiento)
local cooldownText = Instance.new("TextLabel")
cooldownText.Size = UDim2.new(0, 30, 0, 30)
cooldownText.Position = UDim2.new(0.5, -15, 0.5, -15)
cooldownText.BackgroundTransparency = 1
cooldownText.TextScaled = true
cooldownText.FontFace = Font.new("rbxassetid://12187371840", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
cooldownText.TextColor3 = Color3.new(1,1,1)
cooldownText.Visible = false
cooldownText.Parent = container
cooldownText.ZIndex = 104

local buttonOverlay = Instance.new("ImageButton")
buttonOverlay.Size = UDim2.new(1, 0, 1, 0)
buttonOverlay.Position = UDim2.new(0, 0, 0, 0)
buttonOverlay.BackgroundTransparency = 1
buttonOverlay.Parent = container
buttonOverlay.Draggable = true
buttonOverlay.Active = true
buttonOverlay.Visible = true
buttonOverlay.ZIndex = 105

-------------------------------------------------
-- Funciones de la habilidad
-------------------------------------------------

-- Inicia la escalada (solo si se est√° colisionando con pared)
local function startClimbing()
    if not isNearWall() then return end
    isClimbing = true
    climbStartTime = tick()
    -- Al activar, se cambia el gradiente a verde (activo)
    effectFrameGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0,255,0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
    })
    climbTrack:Play()
    
    spawn(function()
        while isClimbing and isNearWall() do
            if tick() - climbStartTime >= maxClimbTime then
                break
            end
            rootPart.Velocity = climbForce
            wait(0.05)
        end
        isClimbing = false
        climbTrack:Stop()
        -- Al finalizar la escalada, se activa el cooldown y se cambia el gradiente a rojo
        effectFrameGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255,0,0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
        })
        isCooldown = true
        cooldownText.Visible = true
        for i = climbCooldownTime, 1, -1 do
            cooldownText.Text = tostring(i)
            wait(1)
        end
        cooldownText.Visible = false
        isCooldown = false
        -- Restablece el gradiente a blanco cuando el cooldown termina
        effectFrameGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
        })
    end)
end

-- Funci√≥n para intentar activar Climb (solo si se est√° colisionando con una pared y sin cooldown)
local function toggleClimbing()
    if isCooldown then return end
    if not isNearWall() then return end
    if not isClimbing then
        startClimbing()
    end
end

-- Permite desactivar Climb si el jugador salta
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Space and isClimbing then
        isClimbing = false
        climbTrack:Stop()
    end
end)

-------------------------------------------------
-- Conexi√≥n del bot√≥n (embellecido y draggable)
-------------------------------------------------
buttonOverlay.MouseButton1Click:Connect(toggleClimbing)

local dragging, dragInput, dragStart, startPos
buttonOverlay.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = buttonOverlay.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

buttonOverlay.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        buttonOverlay.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

local ABILITY_NAME = "Hammer Bounce"
local ICON_ASSET = "rbxassetid://139710250827512"  -- Imagen actualizada del icon
local SHADOW_ASSET = "rbxassetid://114739599325115"
local PRE_IMPACT_ANIMATION = "rbxassetid://14693821579"
local POST_IMPACT_ANIMATION = "rbxassetid://14694012690"
local POST_IMPACT_SOUND = "rbxassetid://1885641628"
local COOLDOWN_DURATION = 30
local player = game.Players.LocalPlayer
if game.PlaceId == 14722542056 then
	local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
	local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
	local characterValue = playerStats:WaitForChild("character")
	local function canUseAbility() return characterValue.Value:lower() == "amy" end
	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "AbilityGUI"
	local container = Instance.new("Frame")
	container.Size = UDim2.new(0,60,0,60)
	container.Position = UDim2.new(1,-80,0.4,-30)
	container.BackgroundTransparency = 1
	container.Parent = gui
	container.ZIndex = 100
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(0,60,0,20)
	titleLabel.Position = UDim2.new(0,0,-0.4,0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = ABILITY_NAME
	titleLabel.TextScaled = true
	titleLabel.TextColor3 = Color3.new(1,1,1)
	titleLabel.FontFace = Font.new("rbxassetid://12187371840",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
	titleLabel.TextStrokeTransparency = 0
	titleLabel.TextStrokeColor3 = Color3.new(0,0,0)
	titleLabel.Parent = container
	titleLabel.ZIndex = 105
	local shadowStain = Instance.new("Frame")
	shadowStain.Size = UDim2.new(1,10,1,10)
	shadowStain.Position = UDim2.new(0,-5,0,-5)
	shadowStain.BackgroundColor3 = Color3.new(0,0,0)
	shadowStain.BackgroundTransparency = 1
	shadowStain.Parent = container
	local stainGradient = Instance.new("UIGradient", shadowStain)
	stainGradient.Rotation = 45
	stainGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0,Color3.new(0,0,0)),
		ColorSequenceKeypoint.new(1,Color3.new(0,0,0))
	})
	stainGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0,0.3),
		NumberSequenceKeypoint.new(1,1)
	})
	local outerBorder = Instance.new("Frame")
	outerBorder.Size = UDim2.new(1,0,1,0)
	outerBorder.Position = UDim2.new(0,0,0,0)
	outerBorder.BackgroundColor3 = Color3.fromRGB(139,0,0)
	outerBorder.Parent = container
	outerBorder.ZIndex = 101
	local outerCorner = Instance.new("UICorner", outerBorder)
	outerCorner.CornerRadius = UDim.new(1,0)
	local outerGradient = Instance.new("UIGradient", outerBorder)
	outerGradient.Rotation = 90
	outerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0,Color3.fromRGB(139,0,0)),
		ColorSequenceKeypoint.new(0.5,Color3.fromRGB(170,0,0)),
		ColorSequenceKeypoint.new(1,Color3.fromRGB(139,0,0))
	})
	outerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0,0),
		NumberSequenceKeypoint.new(0.5,0),
		NumberSequenceKeypoint.new(1,0)
	})
	local innerBorder = Instance.new("Frame")
	innerBorder.Size = UDim2.new(1,-8,1,-8)
	innerBorder.Position = UDim2.new(0,4,0,4)
	innerBorder.BackgroundColor3 = Color3.fromRGB(0,0,0)
	innerBorder.Parent = outerBorder
	innerBorder.ZIndex = 102
	local innerCorner = Instance.new("UICorner", innerBorder)
	innerCorner.CornerRadius = UDim.new(1,0)
	local innerGradient = Instance.new("UIGradient", innerBorder)
	innerGradient.Rotation = 90
	innerGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0,Color3.fromRGB(50,50,50)),
		ColorSequenceKeypoint.new(0.5,Color3.fromRGB(100,100,100)),
		ColorSequenceKeypoint.new(1,Color3.fromRGB(50,50,50))
	})
	innerGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0,0),
		NumberSequenceKeypoint.new(0.5,0),
		NumberSequenceKeypoint.new(1,0)
	})
	local effectFrame = Instance.new("Frame")
	effectFrame.Size = UDim2.new(1,-6,1,-6)
	effectFrame.Position = UDim2.new(0,3,0,3)
	effectFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
	effectFrame.Parent = innerBorder
	effectFrame.ZIndex = 103
	local effectCorner = Instance.new("UICorner", effectFrame)
	effectCorner.CornerRadius = UDim.new(1,0)
	local effectFrameGradient = Instance.new("UIGradient", effectFrame)
	effectFrameGradient.Rotation = 90
	effectFrameGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),
		ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))
	})
	effectFrameGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0,0),
		NumberSequenceKeypoint.new(1,0)
	})
	local shadowAsset = Instance.new("ImageLabel")
	shadowAsset.Size = UDim2.new(1,10,1,10)
	shadowAsset.Position = UDim2.new(0,-5,0,-5)
	shadowAsset.BackgroundTransparency = 1
	shadowAsset.Image = SHADOW_ASSET
	shadowAsset.ImageTransparency = 0.1
	shadowAsset.Parent = effectFrame
	shadowAsset.ZIndex = 102
	local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
	shadowAssetGradient.Rotation = 90
	shadowAssetGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0,Color3.fromRGB(220,220,220)),
		ColorSequenceKeypoint.new(1,Color3.fromRGB(220,220,220))
	})
	shadowAssetGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0,0),
		NumberSequenceKeypoint.new(1,0)
	})
	local iconLabel = Instance.new("ImageLabel")
	iconLabel.Size = UDim2.new(1,0,1,0)
	iconLabel.Position = UDim2.new(0,0,0,0)
	iconLabel.BackgroundTransparency = 1
	iconLabel.Image = ICON_ASSET
	-- Usamos el color blanco para mostrar correctamente la imagen
	iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
	iconLabel.Parent = effectFrame
	iconLabel.ZIndex = 103
	local iconGradient = Instance.new("UIGradient", iconLabel)
	iconGradient.Rotation = 90
	iconGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150,150,150)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0,0,0))
	})
	iconGradient.Transparency = NumberSequence.new({
		NumberSequenceKeypoint.new(0, 0),
		NumberSequenceKeypoint.new(1, 0.55)
	})
	local cooldownText = Instance.new("TextLabel")
	cooldownText.Size = UDim2.new(0,30,0,30)
	cooldownText.Position = UDim2.new(0.5,-15,0.5,-15)
	cooldownText.BackgroundTransparency = 1
	cooldownText.TextScaled = true
	cooldownText.FontFace = Font.new("rbxassetid://12187371840",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
	cooldownText.TextColor3 = Color3.new(1,1,1)
	cooldownText.Visible = false
	cooldownText.Parent = container
	cooldownText.ZIndex = 104
	local abilityButton = Instance.new("ImageButton")
	abilityButton.Size = UDim2.new(1,0,1,0)
	abilityButton.Position = UDim2.new(0,0,0,0)
	abilityButton.BackgroundTransparency = 1
	abilityButton.Parent = container
	abilityButton.Draggable = true
	abilityButton.Active = true
	abilityButton.Visible = canUseAbility()
	abilityButton.ZIndex = 105
	local FLOAT_FORCE = 90000
	local BOUNCE_MULTIPLIER = 50
	local cooldown = false
	local activeAbility = false
	local cooldownActive = false
	local abilityActivatedTime = 0
	local userInput = game:GetService("UserInputService")
	local function startCooldown(duration)
		if cooldownActive then return end
		cooldownActive = true
		cooldownText.Visible = true
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(0.5,Color3.fromRGB(255,0,0)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5,Color3.fromRGB(255,0,0)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))
		})
		for i = duration,1,-1 do
			cooldownText.Text = tostring(i)
			task.wait(1)
		end
		cooldownText.Visible = false
		cooldownActive = false
		cooldown = false
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))
		})
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5,Color3.fromRGB(150,150,150)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))
		})
	end
	local function stopAbility(animTrack)
		if not activeAbility then return end
		activeAbility = false
		effectFrame.BackgroundTransparency = 0
		animTrack:Stop()
		local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if rootPart then
			local bounceImpulse = math.clamp((tick() - abilityActivatedTime) * BOUNCE_MULTIPLIER,50,500)
			local bodyVel = Instance.new("BodyVelocity")
			bodyVel.MaxForce = Vector3.new(0,FLOAT_FORCE,0)
			bodyVel.Velocity = Vector3.new(0,bounceImpulse,0)
			bodyVel.Parent = rootPart
			game.Debris:AddItem(bodyVel,0.5)
		end
		local postAnim = Instance.new("Animation")
		postAnim.AnimationId = POST_IMPACT_ANIMATION
		local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
		if humanoid then
			local postAnimTrack = humanoid:LoadAnimation(postAnim)
			postAnimTrack:Play()
		end
		local sound = Instance.new("Sound",player.Character and (player.Character:FindFirstChild("Head") or player.Character))
		sound.SoundId = POST_IMPACT_SOUND
		sound:Play()
		startCooldown(COOLDOWN_DURATION)
	end
	local function activateAbility()
		if cooldown or not canUseAbility() then return end
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local rootPart = character:WaitForChild("HumanoidRootPart")
		if humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then return end
		cooldown = true
		activeAbility = true
		abilityActivatedTime = tick()
		effectFrame.BackgroundTransparency = 0.5
		effectFrameGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),
			ColorSequenceKeypoint.new(0.5,Color3.fromRGB(0,255,0)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))
		})
		-- Actualizamos el color del icono al activar la habilidad
		iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
		iconGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),
			ColorSequenceKeypoint.new(0.5,Color3.fromRGB(0,255,0)),
			ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))
		})
		local preAnim = Instance.new("Animation")
		preAnim.AnimationId = PRE_IMPACT_ANIMATION
		local animTrack = humanoid:LoadAnimation(preAnim)
		animTrack:Play()
		local stateConn
		stateConn = humanoid.StateChanged:Connect(function(_, newState)
			if newState == Enum.HumanoidStateType.Landed then
				stateConn:Disconnect()
				stopAbility(animTrack)
			end
		end)
	end
	abilityButton.MouseButton1Click:Connect(activateAbility)
	characterValue.Changed:Connect(function() abilityButton.Visible = canUseAbility() end)
	userInput.InputBegan:Connect(function(input,gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			activateAbility()
		end
	end)
end

local player = game.Players.LocalPlayer
if game.PlaceId == 14722542056 then
	local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
	local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
	local characterValue = playerStats:WaitForChild("character")
	local function canUseGlide() return characterValue.Value:lower() == "cream" end
	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "GlideGUI"
	local container = Instance.new("Frame")
	container.Size = UDim2.new(0,60,0,60)
	container.Position = UDim2.new(1,-80,0.4,-30)
	container.BackgroundTransparency = 1
	container.Parent = gui
	container.ZIndex = 100
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(0,60,0,20)
	titleLabel.Position = UDim2.new(0,0,-0.4,0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Glide"
	titleLabel.TextScaled = true
	titleLabel.TextColor3 = Color3.new(1,1,1)
	titleLabel.FontFace = Font.new("rbxassetid://12187371840",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
	titleLabel.TextStrokeTransparency = 0
	titleLabel.TextStrokeColor3 = Color3.new(0,0,0)
	titleLabel.Parent = container
	titleLabel.ZIndex = 105
	local shadowStain = Instance.new("Frame")
	shadowStain.Size = UDim2.new(1,10,1,10)
	shadowStain.Position = UDim2.new(0,-5,0,-5)
	shadowStain.BackgroundColor3 = Color3.new(0,0,0)
	shadowStain.BackgroundTransparency = 1
	shadowStain.Parent = container
	local stainGradient = Instance.new("UIGradient", shadowStain)
	stainGradient.Rotation = 45
	stainGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(0,0,0)),ColorSequenceKeypoint.new(1,Color3.new(0,0,0))})
	stainGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0.3),NumberSequenceKeypoint.new(1,1)})
	local outerBorder = Instance.new("Frame")
	outerBorder.Size = UDim2.new(1,0,1,0)
	outerBorder.Position = UDim2.new(0,0,0,0)
	outerBorder.BackgroundColor3 = Color3.fromRGB(139,0,0)
	outerBorder.Parent = container
	outerBorder.ZIndex = 101
	local outerCorner = Instance.new("UICorner", outerBorder)
	outerCorner.CornerRadius = UDim.new(1,0)
	local outerGradient = Instance.new("UIGradient", outerBorder)
	outerGradient.Rotation = 90
	outerGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(139,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(170,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(139,0,0))})
	outerGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(0.5,0),NumberSequenceKeypoint.new(1,0)})
	local innerBorder = Instance.new("Frame")
	innerBorder.Size = UDim2.new(1,-8,1,-8)
	innerBorder.Position = UDim2.new(0,4,0,4)
	innerBorder.BackgroundColor3 = Color3.fromRGB(0,0,0)
	innerBorder.Parent = outerBorder
	innerBorder.ZIndex = 102
	local innerCorner = Instance.new("UICorner", innerBorder)
	innerCorner.CornerRadius = UDim.new(1,0)
	local innerGradient = Instance.new("UIGradient", innerBorder)
	innerGradient.Rotation = 90
	innerGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(50,50,50)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(100,100,100)),ColorSequenceKeypoint.new(1,Color3.fromRGB(50,50,50))})
	innerGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(0.5,0),NumberSequenceKeypoint.new(1,0)})
	local effectFrame = Instance.new("Frame")
	effectFrame.Size = UDim2.new(1,-6,1,-6)
	effectFrame.Position = UDim2.new(0,3,0,3)
	effectFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
	effectFrame.Parent = innerBorder
	effectFrame.ZIndex = 103
	local effectCorner = Instance.new("UICorner", effectFrame)
	effectCorner.CornerRadius = UDim.new(1,0)
	local effectFrameGradient = Instance.new("UIGradient", effectFrame)
	effectFrameGradient.Rotation = 90
	effectFrameGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))})
	effectFrameGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,0)})
	local shadowAsset = Instance.new("ImageLabel")
	shadowAsset.Size = UDim2.new(1,10,1,10)
	shadowAsset.Position = UDim2.new(0,-5,0,-5)
	shadowAsset.BackgroundTransparency = 1
	shadowAsset.Image = "rbxassetid://114739599325115"
	shadowAsset.ImageTransparency = 0.1
	shadowAsset.Parent = effectFrame
	shadowAsset.ZIndex = 102
	local shadowAssetGradient = Instance.new("UIGradient", shadowAsset)
	shadowAssetGradient.Rotation = 90
	shadowAssetGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(220,220,220)),ColorSequenceKeypoint.new(1,Color3.fromRGB(220,220,220))})
	shadowAssetGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,0)})
	local iconLabel = Instance.new("ImageLabel")
	iconLabel.Size = UDim2.new(1,0,1,0)
	iconLabel.Position = UDim2.new(0,0,0,0)
	iconLabel.BackgroundTransparency = 1
	iconLabel.Image = "rbxassetid://11112592115"
	iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
	iconLabel.Parent = effectFrame
	iconLabel.ZIndex = 103
	local iconGradient = Instance.new("UIGradient", iconLabel)
	iconGradient.Rotation = 90
	iconGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(150,150,150)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))})
	iconGradient.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,0.55)})
	local cooldownText = Instance.new("TextLabel")
	cooldownText.Size = UDim2.new(0,30,0,30)
	cooldownText.Position = UDim2.new(0.5,-15,0.5,-15)
	cooldownText.BackgroundTransparency = 1
	cooldownText.TextScaled = true
	cooldownText.FontFace = Font.new("rbxassetid://12187371840",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
	cooldownText.TextColor3 = Color3.new(1,1,1)
	cooldownText.Visible = false
	cooldownText.Parent = container
	cooldownText.ZIndex = 104
	local glideButton = Instance.new("ImageButton")
	glideButton.Size = UDim2.new(1,0,1,0)
	glideButton.Position = UDim2.new(0,0,0,0)
	glideButton.BackgroundTransparency = 1
	glideButton.Parent = container
	glideButton.Draggable = true
	glideButton.Active = true
	glideButton.Visible = canUseGlide()
	glideButton.ZIndex = 105

	local FLOAT_FORCE = 90000
	local DESCEND_SPEED = -2
	local FASTER_DESCEND_SPEED = -5
	local cooldown = false
	local gliding = false
	local cooldownActive = false

	local function startCooldown(duration)
		if cooldownActive then return end
		cooldownActive = true
		cooldownText.Visible = true
		effectFrameGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(255,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))})
		iconGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(255,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))})
		for i = duration, 1, -1 do
			cooldownText.Text = tostring(i)
			task.wait(1)
		end
		cooldownText.Visible = false
		cooldownActive = false
		cooldown = false
		effectFrameGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))})
		iconGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(150,150,150)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))})
	end

	local function stopGlide(animTrack, glideForce)
		if not gliding then return end
		gliding = false
		effectFrame.BackgroundTransparency = 0
		animTrack:Stop()
		glideForce:Destroy()
		iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
		iconGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(150,150,150)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))})
		startCooldown(35)
	end

	local function activateGlide()
		if cooldown or not canUseGlide() then return end
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		if humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then return end
		cooldown = true
		gliding = true
		effectFrame.BackgroundTransparency = 0.5
		effectFrameGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(0,255,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(255,255,255))})
		iconLabel.ImageColor3 = Color3.fromRGB(255,255,255)
		iconGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(0,0,0)),ColorSequenceKeypoint.new(0.5,Color3.fromRGB(0,255,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))})
		local glideAnim = Instance.new("Animation")
		glideAnim.AnimationId = "rbxassetid://104077515216832"
		local animTrack = humanoid:LoadAnimation(glideAnim)
		animTrack:Play()
		local glideForce = Instance.new("BodyVelocity")
		glideForce.MaxForce = Vector3.new(0,FLOAT_FORCE,0)
		glideForce.Velocity = Vector3.new(0,DESCEND_SPEED,0)
		glideForce.Parent = humanoidRootPart
		local btnConn
		btnConn = glideButton.MouseButton1Click:Connect(function()
			if gliding then
				btnConn:Disconnect()
				stopGlide(animTrack, glideForce)
			end
		end)
		local stateConn
		stateConn = humanoid.StateChanged:Connect(function(_,newState)
			if newState == Enum.HumanoidStateType.Landed then
				stateConn:Disconnect()
				stopGlide(animTrack, glideForce)
			end
		end)
		task.wait(6)
		if gliding then
			glideForce.Velocity = Vector3.new(0,FASTER_DESCEND_SPEED,0)
		end
	end

	glideButton.MouseButton1Click:Connect(activateGlide)

	-- Conexi√≥n para activar Glide al presionar la tecla "P" en PC
	local UserInputService = game:GetService("UserInputService")
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			activateGlide()
		end
	end)

	characterValue.Changed:Connect(function() 
		glideButton.Visible = canUseGlide() 
	end)
end

